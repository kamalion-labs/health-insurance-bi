model Pessoa {
  id                Int        @id @default(autoincrement())
  nome              String
  CPF               String     @unique
  sexo              Sexo?
  dataNascimento    DateTime?  @db.Date
  dataAdmissao      DateTime?  @db.Date
  dataAdmissaoPlano DateTime?  @db.Date
  funcionario       Boolean?
  status            Status?
  scoreDiabetes     Float?     @db.DoublePrecision
  scoreHipertensao  Float?     @db.DoublePrecision
  atestados         Atestado[]
  eventos           Evento[]

  cargo   Cargo? @relation(fields: [idCargo], references: [id])
  idCargo Int?

  tipoTitularidade   TipoTitularidade @relation(fields: [idTipoTitularidade], references: [id])
  idTipoTitularidade Int

  empresa   Empresa @relation(fields: [idEmpresa], references: [id])
  idEmpresa Int

  plano   Plano @relation(fields: [idPlano], references: [id])
  idPlano Int

  titular   Pessoa? @relation("Titular", fields: [idTitular], references: [id])
  idTitular Int?

  dependentes Pessoa[] @relation("Titular")
}

model Cargo {
  id      Int      @id @default(autoincrement())
  nome    String   @unique
  pessoas Pessoa[]

  setor   Setor @relation(fields: [idSetor], references: [id])
  idSetor Int
}

model Setor {
  id     Int     @id @default(autoincrement())
  nome   String
  cargos Cargo[]
}

model TipoTitularidade {
  id             Int          @id @default(autoincrement())
  nome           Titularidade
  grauParentesco String?
  pessoas        Pessoa[]
}

model Atestado {
  id         Int      @id @default(autoincrement())
  dataInicio DateTime @db.Date
  dataFim    DateTime @db.Date
  duracao    Int

  pessoa   Pessoa @relation(fields: [idPessoa], references: [id])
  idPessoa Int
}

enum Sexo {
  M
  F
}

enum Status {
  ATIVO
  INATIVO
  EXCLUIDO
}

enum Titularidade {
  TITULAR
  DEPENDENTE
}
