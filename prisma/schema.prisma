generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Competencia {
  id                      Int      @id @default(autoincrement())
  data                    DateTime
  faturamento             Decimal  @db.Decimal(10, 2)
  coparticipacao          Decimal  @db.Decimal(10, 2)
  sinistro                Decimal  @db.Decimal(10, 2)
  sinistroGeral           Decimal  @db.Decimal(10, 2)
  sinistralidade          Decimal  @db.Decimal(10, 2)
  defasagemSinistralidade Decimal  @db.Decimal(10, 2)
}

model Sinistro {
  id          Int      @id @default(autoincrement())
  competencia DateTime
  tipo        String   @db.VarChar(100)
  valor       Decimal  @db.Decimal(10, 2)
}

model Usuario {
  id   Int    @id @default(autoincrement())
  nome String

  createdAt DateTime @default(now())
}
model Empresa {
  id   Int    @id @default(autoincrement())
  nome String
}
model Operadora {
  id       Int                @id @default(autoincrement())
  nome     String
  arquivos ArquivoOperadora[]
}

model ArquivoOperadora {
  id        Int                  @id @default(autoincrement())
  nome      String
  tipo      TipoArquivoOperadora @default(txt)
  separador String
  tabela    String

  operadora   Operadora @relation(fields: [idOperadora], references: [id])
  idOperadora Int

  colunas ColunaArquivo[]
}

enum TipoArquivoOperadora {
  txt
  csv
  xls
  xlsx
}

model ColunaArquivo {
  id      Int        @id @default(autoincrement())
  nome    String
  coluna  String
  tipo    TipoColuna
  posicao Int?
  inicio  Int?
  fim     Int?

  referenciaTabela String?
  referenciaColuna String?

  arquivoOperadora   ArquivoOperadora @relation(fields: [idArquivoOperadora], references: [id])
  idArquivoOperadora Int
}

enum TipoColuna {
  string
  number
  date
  mesAno
  referencia
}
model Pessoa {
  id                Int      @id @default(autoincrement())
  Nome              String
  CPF               String
  Sexo              Sexo?
  DataNascimento    DateTime
  DataAdmissao      DateTime
  DataAdmissaoPlano DateTime
}

enum Sexo {
  M
  F
}
